{{define "relation"}}package {{.GoPackage}}
{{$obj := .}}
{{$relation := $obj.Relation}}
{{$primaryField := $obj.PrimaryField}}
import (
	"fmt"
	"time"
	"strings"
	"context"

	"github.com/ezbuy/redis-orm/orm"
    "github.com/go-redis/redis/v8"
)
var (
	_ time.Time
	_ fmt.Formatter
	_ strings.Reader
	_ orm.VSet
)

//! relation
type {{$relation.Name}} struct {
	{{- range $i, $field := $relation.Fields}}
	{{$field.Name}}  {{$field.GetType}} {{$field.GetTag}}
	{{- end}}
}

{{template "relation.functions" $relation}}
{{template "relation.manager" $relation}}
{{template "relation.pipeline" $relation}}

{{if eq $relation.StoreType "pair"}}
	{{template "relation.pair" $relation}}
	{{template "relation.pair.sync" $relation}}
{{end}}

{{if eq $relation.StoreType "set"}}
	{{template "relation.set" $relation}}
	{{template "relation.set.sync" $relation}}
{{end}}

{{if eq $relation.StoreType "zset"}}
	{{template "relation.zset" $relation}}
	{{template "relation.zset.sync" $relation}}
{{end}}

{{if eq $relation.StoreType "geo"}}
	{{template "relation.geo" $relation}}
	{{template "relation.geo.sync" $relation}}
{{end}}

{{if eq $relation.StoreType "list"}}
	{{template "relation.list" $relation}}
	{{template "relation.list.sync" $relation}}
{{end}}

{{- if or ($obj.DbContains "mysql") ($obj.DbContains "mssql")}}
{{template "relation.db.read" $relation}}
{{- end}}

{{end}}
